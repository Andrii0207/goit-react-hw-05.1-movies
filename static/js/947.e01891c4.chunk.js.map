{"version":3,"file":"static/js/947.e01891c4.chunk.js","mappings":"kNA4EA,UAjEqB,WAAO,IAAD,IACzB,GAA0BA,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAEnDC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,EAAUF,EAAGG,MAAM,EAAGH,EAAGI,SAE/BC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBJ,GAASK,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcf,EAASe,EAAvB,GAClC,GAAE,CAACN,IAEJ,IAAQO,EACNjB,EADMiB,YAAaC,EACnBlB,EADmBkB,MAAOC,EAC1BnB,EAD0BmB,aAAcC,EACxCpB,EADwCoB,eAAgBC,EACxDrB,EADwDqB,SAAUC,EAClEtB,EADkEsB,OAIpE,OAAKtB,GAKH,iCACE,SAAC,KAAD,CAAMuB,GAAInB,EAAoBoB,QAA9B,sBACA,4BACE,gBACEC,IAAKR,EAXY,mCAWkB,UAAMA,GAAgBS,EACzDC,IAAKT,EACLU,MAAO,CAAEC,MAAO,YAElB,wBACE,yBACGT,EADH,KAEGD,EAAeA,EAAaR,MAAM,EAAG,GAAKQ,EAF7C,UAKF,wBACE,uCAEF,uBAAIE,KACJ,wBACE,qCAEF,uBACGC,GAAUA,EAAOV,OAAS,EACvBU,EAAOQ,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,MACpC,4BAGR,wBACE,qDAEF,SAAC,KAAD,CAAST,GAAG,OAAOjB,MAAO,CAAEC,KAAML,GAAlC,UACE,mCAEF,SAAC,KAAD,CAASqB,GAAG,UAAUjB,MAAO,CAAEC,KAAML,GAArC,UACE,sCAEF,SAAC,EAAA+B,SAAD,CAAUC,UAAU,oDAApB,UACE,SAAC,KAAD,SAzCG,IA6CV,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Suspense, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieDetailById } from '../../service/moviesAPI';\nimport defaultImage from '../../service/defaultImage.png';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const { id } = useParams();\n  const MovieId = id.slice(1, id.length);\n\n  useEffect(() => {\n    getMovieDetailById(MovieId).then(({ data }) => setMovie(data));\n  }, [MovieId]);\n\n  const { poster_path, title, release_date, original_title, overview, genres } =\n    movie;\n  const baseImagePathURL = 'https://image.tmdb.org/t/p/w500/';\n\n  if (!movie) {\n    return null;\n  }\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      <div>\n        <img\n          src={poster_path ? baseImagePathURL + `${poster_path}` : defaultImage}\n          alt={title}\n          style={{ width: '300px' }}\n        />\n        <b>\n          <p>\n            {original_title} (\n            {release_date ? release_date.slice(0, 4) : release_date})\n          </p>\n        </b>\n        <b>\n          <p>OverView</p>\n        </b>\n        <p>{overview}</p>\n        <b>\n          <p>Genres</p>\n        </b>\n        <p>\n          {genres && genres.length > 0\n            ? genres.map(({ name }) => name).join(', ')\n            : 'There are no genres'}\n        </p>\n      </div>\n      <b>\n        <p>Additional information</p>\n      </b>\n      <NavLink to=\"cast\" state={{ from: location }}>\n        <p>Cast</p>\n      </NavLink>\n      <NavLink to=\"reviews\" state={{ from: location }}>\n        <p>Reviews</p>\n      </NavLink>\n      <Suspense fallback={<div>Loading... wait please</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["useState","movie","setMovie","location","useLocation","backLinkLocationRef","useRef","state","from","id","useParams","MovieId","slice","length","useEffect","getMovieDetailById","then","data","poster_path","title","release_date","original_title","overview","genres","to","current","src","defaultImage","alt","style","width","map","name","join","Suspense","fallback"],"sourceRoot":""}