{"version":3,"file":"static/js/853.040c0abe.chunk.js","mappings":"sNAEaA,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,kBAAMC,SAPY,SAAAC,GAClBA,EAAIC,iBACJN,EAASE,GACTG,EAAIE,OAAOC,OACZ,EAGC,WACE,kBACEC,KAAK,OACLC,YAAY,mBACZV,SAfe,SAAAK,GACnBF,EAASE,EAAIE,OAAOI,MACrB,KAeG,mBAAQF,KAAK,SAAb,sBAGL,E,kCCYD,EA/Be,WACb,OAAwCG,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA2Bb,EAAAA,EAAAA,UAAS,IAApC,eAAOc,EAAP,KAAeC,EAAf,KACA,GAA0Bf,EAAAA,EAAAA,UAAS,MAAnC,eAAOgB,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAMXlB,EAAQW,EAAaQ,IAAI,SAQ/B,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAerB,GACZsB,MAAK,SAAAC,GAAI,OAAIT,EAASS,EAAKC,KAAKC,QAAvB,IACTC,OAAM,SAAAC,GAAG,OAAIX,EAASW,EAAb,GACb,GAAE,CAAC3B,IAECa,GAKH,4BACE,SAAChB,EAAD,CAAQC,SAlBc,SAAAW,GACxBG,EAA0B,KAAVH,EAAe,CAAET,MAAOS,GAAU,CAAC,EACpD,KAiBKM,IAAS,SAACa,EAAA,EAAD,CAAYf,OAAQA,EAAQgB,MAAO,CAAEC,KAAMb,QANjD,IASV,C","sources":["components/Search/Search.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { useState } from 'react';\n\nexport const Search = ({ onChange }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  const handeSubmit = evt => {\n    evt.preventDefault();\n    onChange(query);\n    evt.target.reset();\n  };\n\n  return (\n    <form onSubmit={handeSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Enter movie name\"\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { Search } from 'components/Search/Search';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from 'service/moviesAPI';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovie] = useState([]);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n  const getMovieValueName = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    getMovieByName(query)\n      .then(resp => setMovie(resp.data.results))\n      .catch(err => setError(err));\n  }, [query]);\n\n  if (!movies) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Search onChange={getMovieValueName} />\n      {!error && <MoviesList movies={movies} state={{ from: location }} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["Search","onChange","useState","query","setQuery","onSubmit","evt","preventDefault","target","reset","type","placeholder","value","useSearchParams","searchParams","setSearchParams","movies","setMovie","error","setError","location","useLocation","get","useEffect","getMovieByName","then","resp","data","results","catch","err","MoviesList","state","from"],"sourceRoot":""}