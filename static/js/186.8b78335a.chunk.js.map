{"version":3,"file":"static/js/186.8b78335a.chunk.js","mappings":"iMAmCA,UA/BgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAASC,EAAAA,EAAAA,MAETC,EAAUC,OAAOH,EAAOI,GAAGC,MAAM,EAAGL,EAAOM,SAQjD,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GACbO,MAAK,SAAAC,GAAI,OAAIb,EAAWa,EAAKC,KAAKC,QAAzB,IACTC,OAAM,SAAAC,GAAG,OAAIf,EAASe,EAAIC,QAAjB,GACb,GAAE,CAACb,IAECN,GAAYE,GAKf,wBACGF,EAAQoB,KAAI,SAAAC,GAAI,OACf,2BACE,wBACE,oCAAYA,EAAKC,aAEnB,uBAAID,EAAKE,YAJFF,EAAKb,GADC,MALZ,IAeV,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'service/moviesAPI';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const params = useParams();\n\n  const MovieId = Number(params.id.slice(1, params.length));\n\n  useEffect(() => {\n    getMovieReviews(MovieId)\n      .then(resp => setReviews(resp.data.results))\n      .catch(err => setError(err.message));\n  }, [MovieId]);\n\n  if (!reviews && !error) {\n    return null;\n  }\n\n  return (\n    <ul>\n      {reviews.map(item => (\n        <li key={item.id}>\n          <b>\n            <p>Author: {item.author}</p>\n          </b>\n          <p>{item.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","error","setError","params","useParams","MovieId","Number","id","slice","length","useEffect","getMovieReviews","then","resp","data","results","catch","err","message","map","item","author","content"],"sourceRoot":""}